{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Vidu\\\\OneDrive\\\\Desktop\\\\Xenon Innovation\\\\Expenser\\\\src\\\\pages\\\\doc-drafting\\\\upload-pdf\\\\UploadPDF.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { collection, getDocs } from \"firebase/firestore\";\nimport { getStorage, ref, listAll, getDownloadURL, getMetadata } from \"firebase/storage\";\nimport { db } from \"../../../config\";\nimport Navbar from \"../../../components/NavBar/NavBar\";\nimport \"../../../pages/assets/styles/global.css\";\nimport \"../../../pages/assets/styles/UploadPDF.css\"; //TODO: Update this to my own css script\nimport dots from \"../../../images/dots.svg\";\nimport { FaPen, FaTrash, FaPlus, FaFileExport, FaEdit } from \"react-icons/fa\";\n\n// Pop-up dialog. useful for upload pdf section of my page (All good examples for me to use)\nimport AddPDF from \"../../../components/AddPDF/AddPDF\";\nimport GlobalButton from \"../../../components/GlobalButton/GlobalButton\"; // used to represent a button\nimport FillForm from \"../../../components/FillForm/FillForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction formatBytes(bytes) {\n  const units = [\"bytes\", \"KB\", \"MB\", \"GB\", \"TB\"];\n  let index = 0;\n  while (bytes >= 1024 && index < units.length - 1) {\n    bytes /= 1024;\n    index++;\n  }\n  return `${bytes.toFixed(2)} ${units[index]}`;\n}\nfunction UploadPDF() {\n  _s();\n  const [isAddModalOpen, setIsAddModalOpen] = useState(false);\n  const [isFillFormOpen, setIsFillFormOpen] = useState(false);\n  const [selectedPdf, setSelectedPdf] = useState(null);\n  const [pdfCollectionData, setPdfCollectionData] = useState([]);\n  const loadAllPdfs = async () => {\n    try {\n      const storage = getStorage();\n      const pdfsRef = ref(storage, 'pdfs');\n\n      // Get PDF documents from Firestore\n      const pdfsCollection = collection(db, 'pdfs');\n      const pdfsSnapshot = await getDocs(pdfsCollection);\n\n      // Get PDF files from Storage\n      const result = await listAll(pdfsRef);\n\n      // Create a map of storage URLs to metadata\n      const storageMap = new Map();\n      for (const itemRef of result.items) {\n        const url = await getDownloadURL(itemRef);\n        const metadata = await getMetadata(itemRef);\n        storageMap.set(itemRef.name, {\n          url,\n          metadata\n        });\n      }\n\n      // Combine Firestore data with Storage data\n      const pdfCollectionList = pdfsSnapshot.docs.map(doc => {\n        var _storageData$metadata, _storageData$metadata2, _storageData$metadata3;\n        const data = doc.data();\n        const storageData = storageMap.get(data.name) || {\n          url: null,\n          metadata: null\n        };\n        return {\n          id: doc.id,\n          name: data.name,\n          url: storageData.url,\n          size: (_storageData$metadata = storageData.metadata) === null || _storageData$metadata === void 0 ? void 0 : _storageData$metadata.size,\n          contentType: (_storageData$metadata2 = storageData.metadata) === null || _storageData$metadata2 === void 0 ? void 0 : _storageData$metadata2.contentType,\n          updated: (_storageData$metadata3 = storageData.metadata) === null || _storageData$metadata3 === void 0 ? void 0 : _storageData$metadata3.updated,\n          formFields: data.formFields || [],\n          originalPdfUrl: data.originalPdfUrl\n        };\n      });\n      setPdfCollectionData(pdfCollectionList);\n    } catch (error) {\n      console.error(\"Error fetching pdf files: \", error);\n    }\n  };\n  useEffect(() => {\n    loadAllPdfs();\n  }, []);\n  const handleFillForm = pdf => {\n    if (!pdf.formFields || pdf.formFields.length === 0) {\n      alert(\"This PDF has no form fields to fill out.\");\n      return;\n    }\n    setSelectedPdf(pdf);\n    setIsFillFormOpen(true);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Dynamic PDF Field Retrieval\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: dots,\n          alt: \"dots\",\n          className: \"dots\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"table-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"table-header exp\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"exp-spaced\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"yellow-bar exp\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"table-title\",\n              children: \"My PDF Documents\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(GlobalButton, {\n            bg: \"white\",\n            textColor: \"#222222\",\n            icon: FaPlus,\n            text: \"Upload PDF File\",\n            onClick: () => setIsAddModalOpen(true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"global-table\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [\"Name\", \"Size\", \"Type\", \"Last Updated Date\", \"Preview\", \"Actions\"].map(head => /*#__PURE__*/_jsxDEV(\"th\", {\n                children: [head, \" \\u2B0D\"]\n              }, head, true, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: pdfCollectionData.length > 0 ? pdfCollectionData.map(pdf_data => /*#__PURE__*/_jsxDEV(\"tr\", {\n              className: \"table-row\",\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: pdf_data.name || \"N/A\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 140,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: formatBytes(pdf_data.size) || \"N/A\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: pdf_data.contentType.split('/')[1] || \"N/A\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 142,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: pdf_data.updated || \"N/A\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 143,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: pdf_data.url ? /*#__PURE__*/_jsxDEV(\"a\", {\n                  href: pdf_data.url,\n                  target: \"_blank\",\n                  rel: \"noopener noreferrer\",\n                  children: \"Preview\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 146,\n                  columnNumber: 25\n                }, this) : \"N/A\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"action-button\",\n                  onClick: () => handleFillForm(pdf_data),\n                  children: [/*#__PURE__*/_jsxDEV(FaEdit, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 158,\n                    columnNumber: 25\n                  }, this), \" Fill Form\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 154,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 153,\n                columnNumber: 21\n              }, this)]\n            }, pdf_data.id || pdf_data.name, true, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 19\n            }, this)) : /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: /*#__PURE__*/_jsxDEV(\"td\", {\n                colSpan: \"6\",\n                children: \"No PDF Documents Available...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 165,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), isAddModalOpen && /*#__PURE__*/_jsxDEV(AddPDF, {\n      closeModal: () => {\n        setIsAddModalOpen(false);\n        loadAllPdfs(); // Refresh after adding\n      },\n      refreshUploadPDF: loadAllPdfs\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 9\n    }, this), isFillFormOpen && selectedPdf && /*#__PURE__*/_jsxDEV(FillForm, {\n      pdfData: selectedPdf,\n      onClose: () => {\n        setIsFillFormOpen(false);\n        setSelectedPdf(null);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n}\n_s(UploadPDF, \"/ltojLc82dwEbhf56v7V1C+KDGM=\");\n_c = UploadPDF;\nexport default UploadPDF;\nvar _c;\n$RefreshReg$(_c, \"UploadPDF\");","map":{"version":3,"names":["React","useState","useEffect","collection","getDocs","getStorage","ref","listAll","getDownloadURL","getMetadata","db","Navbar","dots","FaPen","FaTrash","FaPlus","FaFileExport","FaEdit","AddPDF","GlobalButton","FillForm","jsxDEV","_jsxDEV","formatBytes","bytes","units","index","length","toFixed","UploadPDF","_s","isAddModalOpen","setIsAddModalOpen","isFillFormOpen","setIsFillFormOpen","selectedPdf","setSelectedPdf","pdfCollectionData","setPdfCollectionData","loadAllPdfs","storage","pdfsRef","pdfsCollection","pdfsSnapshot","result","storageMap","Map","itemRef","items","url","metadata","set","name","pdfCollectionList","docs","map","doc","_storageData$metadata","_storageData$metadata2","_storageData$metadata3","data","storageData","get","id","size","contentType","updated","formFields","originalPdfUrl","error","console","handleFillForm","pdf","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","bg","textColor","icon","text","onClick","head","pdf_data","split","href","target","rel","colSpan","closeModal","refreshUploadPDF","pdfData","onClose","_c","$RefreshReg$"],"sources":["C:/Users/Vidu/OneDrive/Desktop/Xenon Innovation/Expenser/src/pages/doc-drafting/upload-pdf/UploadPDF.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { collection, getDocs } from \"firebase/firestore\";\r\nimport { getStorage, ref, listAll, getDownloadURL, getMetadata } from \"firebase/storage\";\r\n\r\nimport { db } from \"../../../config\";\r\nimport Navbar from \"../../../components/NavBar/NavBar\";\r\nimport \"../../../pages/assets/styles/global.css\";\r\nimport \"../../../pages/assets/styles/UploadPDF.css\"; //TODO: Update this to my own css script\r\nimport dots from \"../../../images/dots.svg\";\r\nimport { FaPen, FaTrash, FaPlus, FaFileExport, FaEdit } from \"react-icons/fa\";\r\n\r\n// Pop-up dialog. useful for upload pdf section of my page (All good examples for me to use)\r\nimport AddPDF from \"../../../components/AddPDF/AddPDF\";\r\nimport GlobalButton from \"../../../components/GlobalButton/GlobalButton\"; // used to represent a button\r\nimport FillForm from \"../../../components/FillForm/FillForm\";\r\n\r\nfunction formatBytes(bytes) {\r\n  const units = [\"bytes\", \"KB\", \"MB\", \"GB\", \"TB\"];\r\n  let index = 0;\r\n\r\n  while (bytes >= 1024 && index < units.length - 1) {\r\n    bytes /= 1024;\r\n    index++;\r\n  }\r\n\r\n  return `${bytes.toFixed(2)} ${units[index]}`;\r\n}\r\n\r\nfunction UploadPDF() {\r\n  const [isAddModalOpen, setIsAddModalOpen] = useState(false);\r\n  const [isFillFormOpen, setIsFillFormOpen] = useState(false);\r\n  const [selectedPdf, setSelectedPdf] = useState(null);\r\n  const [pdfCollectionData, setPdfCollectionData] = useState([]);\r\n\r\n  const loadAllPdfs = async () => {\r\n    try {\r\n      const storage = getStorage();\r\n      const pdfsRef = ref(storage, 'pdfs');\r\n\r\n      // Get PDF documents from Firestore\r\n      const pdfsCollection = collection(db, 'pdfs');\r\n      const pdfsSnapshot = await getDocs(pdfsCollection);\r\n      \r\n      // Get PDF files from Storage\r\n      const result = await listAll(pdfsRef);\r\n\r\n      // Create a map of storage URLs to metadata\r\n      const storageMap = new Map();\r\n      for (const itemRef of result.items) {\r\n        const url = await getDownloadURL(itemRef);\r\n        const metadata = await getMetadata(itemRef);\r\n        storageMap.set(itemRef.name, { url, metadata });\r\n      }\r\n\r\n      // Combine Firestore data with Storage data\r\n      const pdfCollectionList = pdfsSnapshot.docs.map(doc => {\r\n        const data = doc.data();\r\n        const storageData = storageMap.get(data.name) || { url: null, metadata: null };\r\n        \r\n        return {\r\n          id: doc.id,\r\n          name: data.name,\r\n          url: storageData.url,\r\n          size: storageData.metadata?.size,\r\n          contentType: storageData.metadata?.contentType,\r\n          updated: storageData.metadata?.updated,\r\n          formFields: data.formFields || [],\r\n          originalPdfUrl: data.originalPdfUrl\r\n        };\r\n      });\r\n\r\n      setPdfCollectionData(pdfCollectionList);\r\n\r\n    } catch (error) {\r\n      console.error(\"Error fetching pdf files: \", error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadAllPdfs();\r\n  }, []);\r\n\r\n  const handleFillForm = (pdf) => {\r\n    if (!pdf.formFields || pdf.formFields.length === 0) {\r\n      alert(\"This PDF has no form fields to fill out.\");\r\n      return;\r\n    }\r\n    setSelectedPdf(pdf);\r\n    setIsFillFormOpen(true);\r\n  };\r\n\r\n  return (\r\n    <div className=\"page\">\r\n      <Navbar />\r\n      <div className=\"page-content\">\r\n        <div className=\"header\">\r\n          <h3>Dynamic PDF Field Retrieval</h3>\r\n          <img src={dots} alt=\"dots\" className=\"dots\" />\r\n        </div>\r\n\r\n        <div className=\"table-container\">\r\n          <div className=\"table-header exp\">\r\n            <div className=\"exp-spaced\">\r\n              <span className=\"yellow-bar exp\"></span>\r\n              <h2 className=\"table-title\">My PDF Documents</h2>\r\n            </div>\r\n\r\n            <GlobalButton\r\n              bg={\"white\"}\r\n              textColor={\"#222222\"}\r\n              icon={FaPlus}\r\n              text={\"Upload PDF File\"}\r\n              onClick={() => setIsAddModalOpen(true)}\r\n            />\r\n\r\n          </div>\r\n\r\n\r\n          <table className=\"global-table\">\r\n\r\n            <thead>\r\n              <tr>\r\n                {[\r\n                  \"Name\",\r\n                  \"Size\",\r\n                  \"Type\",\r\n                  \"Last Updated Date\",\r\n                  \"Preview\",\r\n                  \"Actions\"\r\n                ].map((head) => (\r\n                  <th key={head}>{head} ⬍</th>\r\n                ))}\r\n              </tr>\r\n            </thead>\r\n\r\n            <tbody>\r\n              {pdfCollectionData.length > 0 ? (\r\n                pdfCollectionData.map((pdf_data) => (\r\n                  <tr key={pdf_data.id || pdf_data.name} className=\"table-row\">\r\n                    <td>{pdf_data.name || \"N/A\"}</td>\r\n                    <td>{formatBytes(pdf_data.size) || \"N/A\"}</td>\r\n                    <td>{pdf_data.contentType.split('/')[1] || \"N/A\"}</td>\r\n                    <td>{pdf_data.updated || \"N/A\"}</td>\r\n                    <td>\r\n                      {pdf_data.url ? (\r\n                        <a href={pdf_data.url} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                          Preview\r\n                        </a>\r\n                      ) : (\r\n                        \"N/A\"\r\n                      )}\r\n                    </td>\r\n                    <td>\r\n                      <button\r\n                        className=\"action-button\"\r\n                        onClick={() => handleFillForm(pdf_data)}\r\n                      >\r\n                        <FaEdit /> Fill Form\r\n                      </button>\r\n                    </td>\r\n                  </tr>\r\n                ))\r\n              ) : (\r\n                <tr>\r\n                  <td colSpan=\"6\">No PDF Documents Available...</td>\r\n                </tr>\r\n              )}\r\n\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n      {/* -------------- Refreshing Sections -------------- */}\r\n      {isAddModalOpen && (\r\n        <AddPDF\r\n          closeModal={() => {\r\n            setIsAddModalOpen(false);\r\n            loadAllPdfs(); // Refresh after adding\r\n          }}\r\n          refreshUploadPDF={loadAllPdfs}\r\n        />\r\n      )}\r\n\r\n      {isFillFormOpen && selectedPdf && (\r\n        <FillForm\r\n          pdfData={selectedPdf}\r\n          onClose={() => {\r\n            setIsFillFormOpen(false);\r\n            setSelectedPdf(null);\r\n          }}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UploadPDF;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}