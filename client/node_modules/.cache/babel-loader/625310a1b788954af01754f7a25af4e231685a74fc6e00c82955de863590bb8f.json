{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Vidu\\\\OneDrive\\\\Desktop\\\\Xenon Innovation\\\\Expenser\\\\client\\\\src\\\\components\\\\FillForm\\\\FillForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { doc, updateDoc } from 'firebase/firestore';\nimport { db } from '../../config';\nimport * as pdfjsLib from 'pdfjs-dist';\nimport { PDFDocument, rgb } from 'pdf-lib';\nimport * as PdfToJson from './PdfToJson';\n\n// Set up the worker for pdf.js\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\npdfjsLib.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjsLib.version}/pdf.worker.min.js`;\nfunction FillForm({\n  pdfData,\n  onClose\n}) {\n  _s();\n  const [formValues, setFormValues] = useState({});\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  // Initialize form values\n  useEffect(() => {\n    if (!(pdfData !== null && pdfData !== void 0 && pdfData.formFields)) {\n      setError(\"No form fields found in this PDF\");\n      return;\n    }\n    const initialValues = {};\n    pdfData.formFields.forEach(field => {\n      initialValues[field.id] = field.value || '';\n    });\n    setFormValues(initialValues);\n  }, [pdfData]);\n  const handleInputChange = (fieldId, value) => {\n    setFormValues(prev => ({\n      ...prev,\n      [fieldId]: value\n    }));\n  };\n  const generateFilledPDF = async () => {\n    // These are not accurate formFields for the files we're working with\n    if (!(pdfData !== null && pdfData !== void 0 && pdfData.formFields) || pdfData.formFields.length === 0) {\n      setError(\"No form fields to fill out\");\n      return;\n    }\n    if (!pdfData.originalPdfUrl) {\n      setError(\"Original PDF URL is missing\");\n      return;\n    }\n    setLoading(true);\n    setError(null);\n    try {\n      const jsonResult = await PdfToJson.PDF_TO_JSON(pdfData.url);\n      console.log(jsonResult[1].inputField.fieldName);\n\n      // Fetch the PDF from the URL\n      const response = await fetch(pdfUrl);\n      const arrayBuffer = await response.arrayBuffer();\n\n      // Load the PDF document\n      const pdfDoc = await PDFDocument.load(arrayBuffer);\n\n      // Get the form\n      const form = pdfDoc.getForm();\n\n      // Set value for a specific field\n      const fieldName = jsonResult[1].inputField.fieldName;\n      const field = form.getTextField(fieldName);\n      field.setText('Your custom value here');\n\n      // Optionally flatten the form so fields become uneditable\n      // form.flatten();\n\n      // Save the modified PDF\n      const pdfBytes = await pdfDoc.save();\n\n      // Trigger file download in the browser\n      const blob = new Blob([pdfBytes], {\n        type: 'application/pdf'\n      });\n      const url = URL.createObjectURL(blob);\n      const a = document.createElement('a');\n      a.href = url;\n      a.download = 'filled-form.pdf';\n      a.click();\n      URL.revokeObjectURL(url);\n      onClose();\n    } catch (error) {\n      console.error('Error generating PDF:', error);\n      if (error.name === 'AbortError') {\n        setError('Request timed out while loading the PDF');\n      } else if (error.message.includes('Failed to load PDF')) {\n        setError('Unable to access the PDF file. Please check if the file exists and is accessible.');\n      } else {\n        setError('Error generating filled PDF: ' + error.message);\n      }\n    } finally {\n      setLoading(false);\n    }\n  };\n  if (!(pdfData !== null && pdfData !== void 0 && pdfData.formFields) || pdfData.formFields.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fill-form-modal\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"fill-form-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Error\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No form fields found in this PDF.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"cancel-button\",\n          onClick: onClose,\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"fill-form-modal\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fill-form-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Fill Form: \", pdfData.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-fields\",\n        children: pdfData.formFields.map(field => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-field\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: field.id,\n            children: field.label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 29\n          }, this), field.type === 'checkbox' ? /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            id: field.id,\n            checked: formValues[field.id] || false,\n            onChange: e => handleInputChange(field.id, e.target.checked)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 33\n          }, this) : field.type === 'signature' ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"signature-pad\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: field.id,\n              value: formValues[field.id] || '',\n              onChange: e => handleInputChange(field.id, e.target.value),\n              placeholder: \"Type signature\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 33\n          }, this) : /*#__PURE__*/_jsxDEV(\"input\", {\n            type: field.type,\n            id: field.id,\n            value: formValues[field.id] || '',\n            onChange: e => handleInputChange(field.id, e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 33\n          }, this)]\n        }, field.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 27\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"generate-button\",\n          onClick: generateFilledPDF,\n          disabled: loading,\n          children: loading ? 'Generating PDF...' : 'Generate Filled PDF'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"cancel-button\",\n          onClick: onClose,\n          disabled: loading,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 9\n  }, this);\n}\n_s(FillForm, \"sYc5jaXsTVp9s8Eeg5YxQ6tiffo=\");\n_c = FillForm;\nexport default FillForm;\nvar _c;\n$RefreshReg$(_c, \"FillForm\");","map":{"version":3,"names":["React","useState","useEffect","doc","updateDoc","db","pdfjsLib","PDFDocument","rgb","PdfToJson","jsxDEV","_jsxDEV","GlobalWorkerOptions","workerSrc","version","FillForm","pdfData","onClose","_s","formValues","setFormValues","loading","setLoading","error","setError","formFields","initialValues","forEach","field","id","value","handleInputChange","fieldId","prev","generateFilledPDF","length","originalPdfUrl","jsonResult","PDF_TO_JSON","url","console","log","inputField","fieldName","response","fetch","pdfUrl","arrayBuffer","pdfDoc","load","form","getForm","getTextField","setText","pdfBytes","save","blob","Blob","type","URL","createObjectURL","a","document","createElement","href","download","click","revokeObjectURL","name","message","includes","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","htmlFor","label","checked","onChange","e","target","placeholder","disabled","_c","$RefreshReg$"],"sources":["C:/Users/Vidu/OneDrive/Desktop/Xenon Innovation/Expenser/client/src/components/FillForm/FillForm.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { doc, updateDoc } from 'firebase/firestore';\r\nimport { db } from '../../config';\r\nimport * as pdfjsLib from 'pdfjs-dist';\r\nimport { PDFDocument, rgb } from 'pdf-lib';\r\nimport * as PdfToJson from './PdfToJson';\r\n\r\n// Set up the worker for pdf.js\r\npdfjsLib.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjsLib.version}/pdf.worker.min.js`;\r\n\r\nfunction FillForm({ pdfData, onClose }) {\r\n    const [formValues, setFormValues] = useState({});\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState(null);\r\n\r\n    // Initialize form values\r\n    useEffect(() => {\r\n        if (!pdfData?.formFields) {\r\n            setError(\"No form fields found in this PDF\");\r\n            return;\r\n        }\r\n\r\n        const initialValues = {};\r\n        pdfData.formFields.forEach(field => {\r\n            initialValues[field.id] = field.value || '';\r\n        });\r\n        setFormValues(initialValues);\r\n    }, [pdfData]);\r\n\r\n    const handleInputChange = (fieldId, value) => {\r\n        setFormValues(prev => ({\r\n            ...prev,\r\n            [fieldId]: value\r\n        }));\r\n    };\r\n\r\n    const generateFilledPDF = async () => {\r\n        // These are not accurate formFields for the files we're working with\r\n        if (!pdfData?.formFields || pdfData.formFields.length === 0) {\r\n            setError(\"No form fields to fill out\");\r\n            return;\r\n        }\r\n\r\n        if (!pdfData.originalPdfUrl) {\r\n            setError(\"Original PDF URL is missing\");\r\n            return;\r\n        }\r\n\r\n        setLoading(true);\r\n        setError(null);\r\n\r\n        try {\r\n\r\n            const jsonResult = await PdfToJson.PDF_TO_JSON(pdfData.url);\r\n            console.log(jsonResult[1].inputField.fieldName);\r\n      \r\n\r\n            // Fetch the PDF from the URL\r\n            const response = await fetch(pdfUrl);\r\n            const arrayBuffer = await response.arrayBuffer();\r\n\r\n            // Load the PDF document\r\n            const pdfDoc = await PDFDocument.load(arrayBuffer);\r\n\r\n            // Get the form\r\n            const form = pdfDoc.getForm();\r\n\r\n            // Set value for a specific field\r\n            const fieldName = jsonResult[1].inputField.fieldName;\r\n            const field = form.getTextField(fieldName);\r\n            field.setText('Your custom value here');\r\n\r\n            // Optionally flatten the form so fields become uneditable\r\n            // form.flatten();\r\n\r\n            // Save the modified PDF\r\n            const pdfBytes = await pdfDoc.save();\r\n\r\n            // Trigger file download in the browser\r\n            const blob = new Blob([pdfBytes], { type: 'application/pdf' });\r\n            const url = URL.createObjectURL(blob);\r\n            const a = document.createElement('a');\r\n            a.href = url;\r\n            a.download = 'filled-form.pdf';\r\n            a.click();\r\n            URL.revokeObjectURL(url);\r\n\r\n            onClose();\r\n        } catch (error) {\r\n            console.error('Error generating PDF:', error);\r\n            if (error.name === 'AbortError') {\r\n                setError('Request timed out while loading the PDF');\r\n            } else if (error.message.includes('Failed to load PDF')) {\r\n                setError('Unable to access the PDF file. Please check if the file exists and is accessible.');\r\n            } else {\r\n                setError('Error generating filled PDF: ' + error.message);\r\n            }\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    if (!pdfData?.formFields || pdfData.formFields.length === 0) {\r\n        return (\r\n            <div className=\"fill-form-modal\">\r\n                <div className=\"fill-form-content\">\r\n                    <h2>Error</h2>\r\n                    <p>No form fields found in this PDF.</p>\r\n                    <button className=\"cancel-button\" onClick={onClose}>\r\n                        Close\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className=\"fill-form-modal\">\r\n            <div className=\"fill-form-content\">\r\n                <h2>Fill Form: {pdfData.name}</h2>\r\n                \r\n                <div className=\"form-fields\">\r\n                    {pdfData.formFields.map((field) => (\r\n                        <div key={field.id} className=\"form-field\">\r\n                            <label htmlFor={field.id}>{field.label}</label>\r\n                            {field.type === 'checkbox' ? (\r\n                                <input\r\n                                    type=\"checkbox\"\r\n                                    id={field.id}\r\n                                    checked={formValues[field.id] || false}\r\n                                    onChange={(e) => handleInputChange(field.id, e.target.checked)}\r\n                                />\r\n                            ) : field.type === 'signature' ? (\r\n                                <div className=\"signature-pad\">\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        id={field.id}\r\n                                        value={formValues[field.id] || ''}\r\n                                        onChange={(e) => handleInputChange(field.id, e.target.value)}\r\n                                        placeholder=\"Type signature\"\r\n                                    />\r\n                                </div>\r\n                            ) : (\r\n                                <input\r\n                                    type={field.type}\r\n                                    id={field.id}\r\n                                    value={formValues[field.id] || ''}\r\n                                    onChange={(e) => handleInputChange(field.id, e.target.value)}\r\n                                />\r\n                            )}\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n\r\n                {error && <div className=\"error\">{error}</div>}\r\n\r\n                <div className=\"button-group\">\r\n                    <button\r\n                        className=\"generate-button\"\r\n                        onClick={generateFilledPDF}\r\n                        disabled={loading}\r\n                    >\r\n                        {loading ? 'Generating PDF...' : 'Generate Filled PDF'}\r\n                    </button>\r\n                    <button\r\n                        className=\"cancel-button\"\r\n                        onClick={onClose}\r\n                        disabled={loading}\r\n                    >\r\n                        Cancel\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default FillForm; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,GAAG,EAAEC,SAAS,QAAQ,oBAAoB;AACnD,SAASC,EAAE,QAAQ,cAAc;AACjC,OAAO,KAAKC,QAAQ,MAAM,YAAY;AACtC,SAASC,WAAW,EAAEC,GAAG,QAAQ,SAAS;AAC1C,OAAO,KAAKC,SAAS,MAAM,aAAa;;AAExC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACAL,QAAQ,CAACM,mBAAmB,CAACC,SAAS,GAAG,2CAA2CP,QAAQ,CAACQ,OAAO,oBAAoB;AAExH,SAASC,QAAQA,CAAC;EAAEC,OAAO;EAAEC;AAAQ,CAAC,EAAE;EAAAC,EAAA;EACpC,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGnB,QAAQ,CAAC,CAAC,CAAC,CAAC;EAChD,MAAM,CAACoB,OAAO,EAAEC,UAAU,CAAC,GAAGrB,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACsB,KAAK,EAAEC,QAAQ,CAAC,GAAGvB,QAAQ,CAAC,IAAI,CAAC;;EAExC;EACAC,SAAS,CAAC,MAAM;IACZ,IAAI,EAACc,OAAO,aAAPA,OAAO,eAAPA,OAAO,CAAES,UAAU,GAAE;MACtBD,QAAQ,CAAC,kCAAkC,CAAC;MAC5C;IACJ;IAEA,MAAME,aAAa,GAAG,CAAC,CAAC;IACxBV,OAAO,CAACS,UAAU,CAACE,OAAO,CAACC,KAAK,IAAI;MAChCF,aAAa,CAACE,KAAK,CAACC,EAAE,CAAC,GAAGD,KAAK,CAACE,KAAK,IAAI,EAAE;IAC/C,CAAC,CAAC;IACFV,aAAa,CAACM,aAAa,CAAC;EAChC,CAAC,EAAE,CAACV,OAAO,CAAC,CAAC;EAEb,MAAMe,iBAAiB,GAAGA,CAACC,OAAO,EAAEF,KAAK,KAAK;IAC1CV,aAAa,CAACa,IAAI,KAAK;MACnB,GAAGA,IAAI;MACP,CAACD,OAAO,GAAGF;IACf,CAAC,CAAC,CAAC;EACP,CAAC;EAED,MAAMI,iBAAiB,GAAG,MAAAA,CAAA,KAAY;IAClC;IACA,IAAI,EAAClB,OAAO,aAAPA,OAAO,eAAPA,OAAO,CAAES,UAAU,KAAIT,OAAO,CAACS,UAAU,CAACU,MAAM,KAAK,CAAC,EAAE;MACzDX,QAAQ,CAAC,4BAA4B,CAAC;MACtC;IACJ;IAEA,IAAI,CAACR,OAAO,CAACoB,cAAc,EAAE;MACzBZ,QAAQ,CAAC,6BAA6B,CAAC;MACvC;IACJ;IAEAF,UAAU,CAAC,IAAI,CAAC;IAChBE,QAAQ,CAAC,IAAI,CAAC;IAEd,IAAI;MAEA,MAAMa,UAAU,GAAG,MAAM5B,SAAS,CAAC6B,WAAW,CAACtB,OAAO,CAACuB,GAAG,CAAC;MAC3DC,OAAO,CAACC,GAAG,CAACJ,UAAU,CAAC,CAAC,CAAC,CAACK,UAAU,CAACC,SAAS,CAAC;;MAG/C;MACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACC,MAAM,CAAC;MACpC,MAAMC,WAAW,GAAG,MAAMH,QAAQ,CAACG,WAAW,CAAC,CAAC;;MAEhD;MACA,MAAMC,MAAM,GAAG,MAAMzC,WAAW,CAAC0C,IAAI,CAACF,WAAW,CAAC;;MAElD;MACA,MAAMG,IAAI,GAAGF,MAAM,CAACG,OAAO,CAAC,CAAC;;MAE7B;MACA,MAAMR,SAAS,GAAGN,UAAU,CAAC,CAAC,CAAC,CAACK,UAAU,CAACC,SAAS;MACpD,MAAMf,KAAK,GAAGsB,IAAI,CAACE,YAAY,CAACT,SAAS,CAAC;MAC1Cf,KAAK,CAACyB,OAAO,CAAC,wBAAwB,CAAC;;MAEvC;MACA;;MAEA;MACA,MAAMC,QAAQ,GAAG,MAAMN,MAAM,CAACO,IAAI,CAAC,CAAC;;MAEpC;MACA,MAAMC,IAAI,GAAG,IAAIC,IAAI,CAAC,CAACH,QAAQ,CAAC,EAAE;QAAEI,IAAI,EAAE;MAAkB,CAAC,CAAC;MAC9D,MAAMnB,GAAG,GAAGoB,GAAG,CAACC,eAAe,CAACJ,IAAI,CAAC;MACrC,MAAMK,CAAC,GAAGC,QAAQ,CAACC,aAAa,CAAC,GAAG,CAAC;MACrCF,CAAC,CAACG,IAAI,GAAGzB,GAAG;MACZsB,CAAC,CAACI,QAAQ,GAAG,iBAAiB;MAC9BJ,CAAC,CAACK,KAAK,CAAC,CAAC;MACTP,GAAG,CAACQ,eAAe,CAAC5B,GAAG,CAAC;MAExBtB,OAAO,CAAC,CAAC;IACb,CAAC,CAAC,OAAOM,KAAK,EAAE;MACZiB,OAAO,CAACjB,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC7C,IAAIA,KAAK,CAAC6C,IAAI,KAAK,YAAY,EAAE;QAC7B5C,QAAQ,CAAC,yCAAyC,CAAC;MACvD,CAAC,MAAM,IAAID,KAAK,CAAC8C,OAAO,CAACC,QAAQ,CAAC,oBAAoB,CAAC,EAAE;QACrD9C,QAAQ,CAAC,mFAAmF,CAAC;MACjG,CAAC,MAAM;QACHA,QAAQ,CAAC,+BAA+B,GAAGD,KAAK,CAAC8C,OAAO,CAAC;MAC7D;IACJ,CAAC,SAAS;MACN/C,UAAU,CAAC,KAAK,CAAC;IACrB;EACJ,CAAC;EAED,IAAI,EAACN,OAAO,aAAPA,OAAO,eAAPA,OAAO,CAAES,UAAU,KAAIT,OAAO,CAACS,UAAU,CAACU,MAAM,KAAK,CAAC,EAAE;IACzD,oBACIxB,OAAA;MAAK4D,SAAS,EAAC,iBAAiB;MAAAC,QAAA,eAC5B7D,OAAA;QAAK4D,SAAS,EAAC,mBAAmB;QAAAC,QAAA,gBAC9B7D,OAAA;UAAA6D,QAAA,EAAI;QAAK;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACdjE,OAAA;UAAA6D,QAAA,EAAG;QAAiC;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,eACxCjE,OAAA;UAAQ4D,SAAS,EAAC,eAAe;UAACM,OAAO,EAAE5D,OAAQ;UAAAuD,QAAA,EAAC;QAEpD;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACR;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC;EAEd;EAEA,oBACIjE,OAAA;IAAK4D,SAAS,EAAC,iBAAiB;IAAAC,QAAA,eAC5B7D,OAAA;MAAK4D,SAAS,EAAC,mBAAmB;MAAAC,QAAA,gBAC9B7D,OAAA;QAAA6D,QAAA,GAAI,aAAW,EAACxD,OAAO,CAACoD,IAAI;MAAA;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAElCjE,OAAA;QAAK4D,SAAS,EAAC,aAAa;QAAAC,QAAA,EACvBxD,OAAO,CAACS,UAAU,CAACqD,GAAG,CAAElD,KAAK,iBAC1BjB,OAAA;UAAoB4D,SAAS,EAAC,YAAY;UAAAC,QAAA,gBACtC7D,OAAA;YAAOoE,OAAO,EAAEnD,KAAK,CAACC,EAAG;YAAA2C,QAAA,EAAE5C,KAAK,CAACoD;UAAK;YAAAP,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,EAC9ChD,KAAK,CAAC8B,IAAI,KAAK,UAAU,gBACtB/C,OAAA;YACI+C,IAAI,EAAC,UAAU;YACf7B,EAAE,EAAED,KAAK,CAACC,EAAG;YACboD,OAAO,EAAE9D,UAAU,CAACS,KAAK,CAACC,EAAE,CAAC,IAAI,KAAM;YACvCqD,QAAQ,EAAGC,CAAC,IAAKpD,iBAAiB,CAACH,KAAK,CAACC,EAAE,EAAEsD,CAAC,CAACC,MAAM,CAACH,OAAO;UAAE;YAAAR,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAClE,CAAC,GACFhD,KAAK,CAAC8B,IAAI,KAAK,WAAW,gBAC1B/C,OAAA;YAAK4D,SAAS,EAAC,eAAe;YAAAC,QAAA,eAC1B7D,OAAA;cACI+C,IAAI,EAAC,MAAM;cACX7B,EAAE,EAAED,KAAK,CAACC,EAAG;cACbC,KAAK,EAAEX,UAAU,CAACS,KAAK,CAACC,EAAE,CAAC,IAAI,EAAG;cAClCqD,QAAQ,EAAGC,CAAC,IAAKpD,iBAAiB,CAACH,KAAK,CAACC,EAAE,EAAEsD,CAAC,CAACC,MAAM,CAACtD,KAAK,CAAE;cAC7DuD,WAAW,EAAC;YAAgB;cAAAZ,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC/B;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACD,CAAC,gBAENjE,OAAA;YACI+C,IAAI,EAAE9B,KAAK,CAAC8B,IAAK;YACjB7B,EAAE,EAAED,KAAK,CAACC,EAAG;YACbC,KAAK,EAAEX,UAAU,CAACS,KAAK,CAACC,EAAE,CAAC,IAAI,EAAG;YAClCqD,QAAQ,EAAGC,CAAC,IAAKpD,iBAAiB,CAACH,KAAK,CAACC,EAAE,EAAEsD,CAAC,CAACC,MAAM,CAACtD,KAAK;UAAE;YAAA2C,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAChE,CACJ;QAAA,GA1BKhD,KAAK,CAACC,EAAE;UAAA4C,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OA2Bb,CACR;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC,EAELrD,KAAK,iBAAIZ,OAAA;QAAK4D,SAAS,EAAC,OAAO;QAAAC,QAAA,EAAEjD;MAAK;QAAAkD,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eAE9CjE,OAAA;QAAK4D,SAAS,EAAC,cAAc;QAAAC,QAAA,gBACzB7D,OAAA;UACI4D,SAAS,EAAC,iBAAiB;UAC3BM,OAAO,EAAE3C,iBAAkB;UAC3BoD,QAAQ,EAAEjE,OAAQ;UAAAmD,QAAA,EAEjBnD,OAAO,GAAG,mBAAmB,GAAG;QAAqB;UAAAoD,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAClD,CAAC,eACTjE,OAAA;UACI4D,SAAS,EAAC,eAAe;UACzBM,OAAO,EAAE5D,OAAQ;UACjBqE,QAAQ,EAAEjE,OAAQ;UAAAmD,QAAA,EACrB;QAED;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACR,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd;AAAC1D,EAAA,CArKQH,QAAQ;AAAAwE,EAAA,GAARxE,QAAQ;AAuKjB,eAAeA,QAAQ;AAAC,IAAAwE,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}